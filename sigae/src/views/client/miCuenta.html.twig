<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <!--SEO-->
    <meta name="description" content="AIO taller mecanico en montevideo, Estacionamiento 24 horas y mas">
    <meta name="keywords" content="Taller mecanico, taller mecanico montevideo, taller mecanico cerca de mi, estacionamiento 24 horas, venta de neumaticos">
    <meta name="author" content="All In One">
    <!--Es responsivo-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AIO - Taller, neum√°ticos, reservas y m√°s</title>
    <link rel="stylesheet" href="{{ asset('css/styles.css') }}">
    <link rel="icon" type="image/x-icon" href="{{ asset('ico/logo-positivo.ico') }}">
    <style>
      @font-face {
            font-family: 'Teachers';
            src: url("{{ asset('font/Teachers-VariableFont_wght.ttf') }}");
            font-weight: normal;
            font-style: normal;
        }
    
        body, input, select, button, option {
            font-family: 'Teachers', sans-serif;
        }

        .btn{
            background-color: #dc2626
        }

        .btn:hover{
            background-color: #b91c1c
        }

        .editable:focus {
            outline: 2px solid #4a90e2;
            padding: 2px;
        }
        .edit-button {
            display: none;
            margin-left: 10px;
            padding: 2px 5px;
            background-color: #4a90e2;
            color: white;
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }
        .editing .edit-button {
            display: inline-block;
        }

            .editing-mode {
            background-color: #f0f9ff;
            border-color: #3b82f6;
            box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);
        }

        .editing-mode input:not([readonly]),
        .editing-mode select:not([disabled]) {
            background-color: white;
            border-color: #3b82f6;
        }

        .edit-button {
            display: none;
        }

        .editing-mode .edit-button {
            display: inline-flex;
        }
    </style>
</head>

{% include 'partials/header.html.twig' %}

<body class="bg-white">
    <section class="container mx-auto px-4 py-8 max-w-2xl">
                {% if response.errors is defined and response.errors is not empty %}
                    <div id="error-container" style="background-color: #ffcec6;" class=" text-gray-950 text-center  p-4 rounded-md mb-4">
                        <ul id="error-list">
                            {% for error in response.errors %}
                                <li>{{ error }}</li>
                            {% endfor %}
                        </ul>
                    </div>
                {% endif %}
        <!-- Placeholder para foto de perfil -->
    {#
        <div class="w-32 h-32 mx-auto mb-8 bg-gray-200 rounded-full flex items-center justify-center">
            {% if fotoPerfil %}
                <img src="{{ fotoPerfil }}" alt="Foto de perfil" class="w-full h-full object-cover rounded-full">
            {% else %}
                <span class="text-4xl text-gray-500">üì∑</span>
            {% endif %}
        </div>
    #}
        <h1 class="text-2xl md:text-3xl font-bold text-center text-neutral-900 mb-8">{{ cliente.nombre }} {{ cliente.apellido }}</h1>

        <form id="edit-account-form" action="{{ path('editMyAccount') }}" method="POST">
            <div class="mb-6">
                <label for="email" class="block text-lg font-medium text-neutral-900 mb-2">Correo</label>
                <input type="email" id="email" name="email" class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                    value="{{ cliente.email|slice(0, 1) ~ '****' ~ cliente.email|slice(-2) ~ cliente.email|split('@')[1] }}" readonly aria-label="Email address" />
            </div>

            <div class="mb-6 relative">
                <label for="nombre" class="block text-lg font-medium text-neutral-900 mb-2">Nombre</label>
                <input type="text" id="nombre" name="nombre" class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                    value="{{ cliente.nombre }}" aria-label="Nombre" />
            </div>

            <div class="mb-6 relative">
                <label for="apellido" class="block text-lg font-medium text-neutral-900 mb-2">Apellido</label>
                <input type="text" id="apellido" name="apellido" class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                    value="{{ cliente.apellido }}" aria-label="Apellido" />
            </div>
        {% if  (cliente.telefono) %}
            <div class="mb-8 relative">
                <label for="telefono" class="block text-lg font-medium text-neutral-900 mb-2">Tel√©fono</label>
                <input type="tel" id="telefono" name="telefono" class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                    value="{{cliente.telefono}}" aria-label="N√∫mero de tel√©fono" />
            </div>
        {% else %}
          <div class="mb-8 relative">
                <label for="telefono" class="block text-lg font-medium text-neutral-900 mb-2">Tel√©fono</label>
                <input type="tel" id="telefono" name="telefono" class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                    value="Ingrese un telefono" aria-label="N√∫mero de tel√©fono" />
            </div>
        {% endif %}

            <button type="submit" class="w-full md:w-auto px-6 py-3 duration-300 btn text-white text-xl font-bold rounded-lg transition-colors mb-8">
                Modificar
            </button>
        </form>

        <section class="mb-8">
            <h2 class="text-2xl md:text-3xl font-bold text-center text-neutral-900 mb-6">Mis veh√≠culos</h2>
            <div class="space-y-6">
                {% for vehiculo in misVehiculos %}
                    <div class="bg-white rounded-md border border-slate-300 p-4">
                        <form class="vehicle-form" id="vehicle-form-{{ loop.index }}">
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                                <div>
                                    <label class="block text-lg font-medium text-neutral-900 mb-2">Matr√≠cula</label>
                                    <input type="text" name="matricula" class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm editable" value="{{ vehiculo.matricula }}" readonly>
                                </div>
                                
                                <div>
                                    <label class="block text-lg font-medium text-neutral-900 mb-2">Marca</label>
                                    <select name="marca" class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm editable" disabled data-current-value="{{ vehiculo.marca }}">
                                        <option value="{{ vehiculo.marca }}">{{ vehiculo.marca }}</option>
                                    </select>
                                </div>

                                <div>
                                    <label class="block text-lg font-medium text-neutral-900 mb-2">Modelo</label>
                                    <select name="modelo" class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm editable" disabled data-current-value="{{ vehiculo.modelo }}">
                                        <option value="{{ vehiculo.modelo }}">{{ vehiculo.modelo }}</option>
                                    </select>
                                </div>

                                <div>
                                    <label class="block text-lg font-medium text-neutral-900 mb-2">Tipo</label>
                                    <select name="tipo" class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm editable" disabled>
                                        <option value="auto" {% if vehiculo.tipo == 'auto' %}selected{% endif %}>Auto</option>
                                        <option value="camioneta" {% if vehiculo.tipo == 'camioneta' %}selected{% endif %}>Camioneta</option>
                                        <option value="camion" {% if vehiculo.tipo == 'camion' %}selected{% endif %}>Peque√±o cami√≥n</option>
                                        <option value="utilitario" {% if vehiculo.tipo == 'utilitario' %}selected{% endif %}>Peque√±o utilitario</option>
                                        <option value="moto" {% if vehiculo.tipo == 'moto' %}selected{% endif %}>Moto</option>
                                    </select>
                                </div>

                                <div class="md:col-span-2">
                                    <label class="block text-lg font-medium text-neutral-900 mb-2">Color</label>
                                    <input type="color" name="color" class="w-full h-10 px-3 py-2 bg-white rounded-md border border-slate-300 text-sm editable" value="{{ vehiculo.color }}" readonly>
                                </div>
                            </div>

                         <div class="flex justify-end items-center space-x-4">
                            <button type="button" class="text-2xl hover:scale-110 transition-transform duration-300" onclick="toggleVehicleEdit({{ loop.index }})">
                                <span class="edit-icon">‚úèÔ∏è</span>
                                <span class="save-icon hidden">üíæ</span>
                            </button>
                            <button type="submit" class="edit-button px-6 py-2 duration-300 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-lg transition-colors">
                                Guardar cambios
                            </button>
                            <button type="button" class="text-2xl hover:scale-110 transition-transform duration-300">
                                üóëÔ∏è
                            </button>
                        </div>
                        </form>
                    </div>
                {% endfor %}
            </div>

            <div class="space-y-4 mt-8 mb-16">
                <button id="add-vehicle-btn" type="button" class="btn w-full flex justify-between items-center px-4 py-3 duration-300 text-white text-xl font-semibold rounded-md transition-colors">
                    <span>Ingrese veh√≠culo</span>
                    <img src="{{ asset('svg/iconDropDown.svg') }}" alt="Dropdown icon" class="w-5 h-5 transform transition-transform duration-300" id="dropdown-icon">
                </button>

                <form id="new-vehicle-form" action="{{ path('addVehicle')}}" class="hidden space-y-6 mt-4 p-4 border border-slate-300 rounded-md" method="POST">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="matricula" class="block text-lg font-medium text-neutral-900 mb-2">
                                Matr√≠cula *
                            </label>
                            <input type="text" id="matricula" name="matricula" required
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ingrese la matr√≠cula">
                        </div>

                        <div>
                            <label for="makeSelect" class="block text-lg font-medium text-neutral-900 mb-2">
                                Marca (Opcional)
                            </label>
                            <select id="makeSelect" name="marca" 
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm">
                                <option value="">Seleccione una marca</option>
                            </select>
                        </div>

                        <div>
                            <label for="modelSelect" class="block text-lg font-medium text-neutral-900 mb-2">
                                Modelo (Opcional)
                            </label>
                            <select id="modelSelect" name="modelo" 
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm">
                                <option value="">Seleccione un modelo</option>
                            </select>
                        </div>

                        <div>
                            <label for="tipo" class="block text-lg font-medium text-neutral-900 mb-2">
                                Tipo de veh√≠culo *
                            </label>
                            <select id="tipo" name="tipo" required
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm">
                                <option value="">Seleccione un tipo</option>
                                <option value="auto">Auto</option>
                                <option value="camioneta">Camioneta</option>
                                <option value="camion">Peque√±o cami√≥n</option>
                                <option value="utilitario">Peque√±o utilitario</option>
                                <option value="moto">Moto</option>
                            </select>
                        </div>

                        <div class="md:col-span-2">
                            <label for="color" class="block text-lg font-medium text-neutral-900 mb-2">
                                Color *
                            </label>
                            <input type="color" id="color" name="color" required
                                class="w-full h-10 px-3 py-2 bg-white rounded-md border border-slate-300">
                        </div>

                        <div class="md:col-span-2">
                            <button type="submit" 
                                class="w-full md:w-auto px-6 py-3 duration-300 btn text-white text-xl font-bold rounded-lg transition-colors">
                                Guardar veh√≠culo
                            </button>
                        </div>
                    </div>
                </form>
            </div>

          <script>
    // Elementos del DOM para el formulario de nuevo veh√≠culo
    const addVehicleBtn = document.getElementById('add-vehicle-btn');
    const newVehicleForm = document.getElementById('new-vehicle-form');
    const dropdownIcon = document.getElementById('dropdown-icon');
    const makeSelect = document.getElementById('makeSelect');
    const modelSelect = document.getElementById('modelSelect');

    // Toggle del formulario de nuevo veh√≠culo
    addVehicleBtn.addEventListener('click', () => {
        newVehicleForm.classList.toggle('hidden');
        dropdownIcon.classList.toggle('rotate-180');
        
        // Cargar las marcas solo cuando se abre el formulario por primera vez
        if (!newVehicleForm.classList.contains('hidden') && makeSelect.options.length <= 1) {
            loadMakes();
        }
    });

    // Cargar las marcas para el formulario de nuevo veh√≠culo
    async function loadMakes() {
        try {
            const response = await fetch('https://vpic.nhtsa.dot.gov/api/vehicles/GetMakesForVehicleType/car?format=json');
            const data = await response.json();
            
            data.Results.forEach(make => {
                const option = document.createElement('option');
                option.value = make.MakeName;
                option.textContent = make.MakeName;
                makeSelect.appendChild(option);
            });
        } catch (error) {
            console.error('Error cargando marcas:', error);
        }
    }

    // Cargar los modelos cuando se seleccione una marca en el formulario de nuevo veh√≠culo
    async function loadModels(make) {
        try {
            modelSelect.innerHTML = '<option value="">Seleccione un modelo</option>';
            
            if (!make) return;

            const response = await fetch(`https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMake/${make}?format=json`);
            const data = await response.json();
            
            data.Results.forEach(model => {
                const option = document.createElement('option');
                option.value = model.Model_Name;
                option.textContent = model.Model_Name;
                modelSelect.appendChild(option);
            });
        } catch (error) {
            console.error('Error cargando modelos:', error);
        }
    }

    // Event listener para el cambio de marca en el formulario de nuevo veh√≠culo
    makeSelect.addEventListener('change', (e) => {
        loadModels(e.target.value);
    });

    // Funciones para el formulario de edici√≥n de veh√≠culo
    async function loadMakesForEdit(selectElement) {
        try {
            selectElement.innerHTML = '<option value="">Seleccione una marca</option>';
            const currentValue = selectElement.getAttribute('data-current-value');
            
            const response = await fetch('https://vpic.nhtsa.dot.gov/api/vehicles/GetMakesForVehicleType/car?format=json');
            const data = await response.json();
            
            data.Results.forEach(make => {
                const option = document.createElement('option');
                option.value = make.MakeName;
                option.textContent = make.MakeName;
                if (make.MakeName.toLowerCase() === currentValue.toLowerCase()) {
                    option.selected = true;
                }
                selectElement.appendChild(option);
            });
        } catch (error) {
            console.error('Error cargando marcas:', error);
        }
    }

    async function loadModelsForEdit(makeSelect, modelSelect) {
        try {
            modelSelect.innerHTML = '<option value="">Seleccione un modelo</option>';
            const currentModel = modelSelect.getAttribute('data-current-value');
            
            if (!makeSelect.value) return;

            const response = await fetch(`https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMake/${makeSelect.value}?format=json`);
            const data = await response.json();
            
            data.Results.forEach(model => {
                const option = document.createElement('option');
                option.value = model.Model_Name;
                option.textContent = model.Model_Name;
                if (model.Model_Name.toLowerCase() === currentModel.toLowerCase()) {
                    option.selected = true;
                }
                modelSelect.appendChild(option);
            });
        } catch (error) {
            console.error('Error cargando modelos:', error);
        }
    }

    function validateColorFormat(color) {
        // Si no empieza con #, a√±adirlo
        if (!color.startsWith('#')) {
            color = '#' + color;
        }
        
        // Asegurarse de que tenga 6 d√≠gitos despu√©s del #
        if (color.length === 7 && /^#[0-9A-Fa-f]{6}$/.test(color)) {
            return color;
        }
        
        // Si no es v√°lido, retornar negro por defecto
        return '#000000';
    }

    function toggleVehicleEdit(index) {
    const form = document.getElementById(`vehicle-form-${index}`);
    const formContainer = form.closest('.bg-white');
    const inputs = form.querySelectorAll('.editable');
    const editButton = form.querySelector('.edit-button');
    const makeSelect = form.querySelector('select[name="marca"]');
    const modelSelect = form.querySelector('select[name="modelo"]');
    const editIcon = form.querySelector('.edit-icon');
    const saveIcon = form.querySelector('.save-icon');
    
    // Toggle la clase de modo edici√≥n
    formContainer.classList.toggle('editing-mode');
    
    // Toggle iconos
    editIcon.classList.toggle('hidden');
    saveIcon.classList.toggle('hidden');
    
    inputs.forEach(input => {
        if (input.type === 'color') {
            input.value = validateColorFormat(input.value);
            input.readOnly = !input.readOnly;
        }
        else if (input.tagName === 'SELECT') {
            input.disabled = !input.disabled;
            
            if (!input.disabled && input.name === 'marca') {
                loadMakesForEdit(input);
                input.addEventListener('change', () => loadModelsForEdit(input, modelSelect));
            }
        } else {
            input.readOnly = !input.readOnly;
        }

        // A√±adir focus al primer input cuando se entra en modo edici√≥n
        if (!input.readOnly && !input.disabled) {
            input.focus();
        }
    });
    
    // Toggle el bot√≥n de guardar
    editButton.classList.toggle('hidden');
    
    // Si estamos habilitando la edici√≥n, cargar los modelos para la marca actual
    if (!makeSelect.disabled) {
        loadModelsForEdit(makeSelect, modelSelect);
    }
}

    // Agregar validaci√≥n antes de enviar los formularios
    document.querySelectorAll('form.vehicle-form').forEach(form => {
        form.addEventListener('submit', function(e) {
            const colorInput = this.querySelector('input[type="color"]');
            if (colorInput) {
                colorInput.value = validateColorFormat(colorInput.value);
            }
        });
    });

    document.getElementById('new-vehicle-form').addEventListener('submit', function(e) {
        const colorInput = this.querySelector('input[type="color"]');
        if (colorInput) {
            colorInput.value = validateColorFormat(colorInput.value);
        }
    });
</script>

            <form action="{{ path('logout') }}" method="GET" class="w-full">
                <button type="submit" name="CerrarSesion" class="w-full px-4 py-3 bg-rose-400 text-white text-lg font-bold rounded-md hover:bg-rose-500 transition-colors">
                    Cerrar Sesi√≥n
                </button>
            </form>
        </section>

        {% include 'partials/footer.html.twig' %}
    </section>
</body>
</html>