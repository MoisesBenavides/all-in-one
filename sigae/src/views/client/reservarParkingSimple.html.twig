<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="description" content="AIO taller mecanico en montevideo, Estacionamiento 24 horas y mas">
    <meta name="keywords" content="Taller mecanico, taller mecanico montevideo, taller mecanico cerca de mi, estacionamiento 24 horas, venta de neumaticos">
    <meta name="author" content="All In One">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reserva de Parking Simple | AIO</title>
    <link rel="stylesheet" href="{{ asset('css/styles.css') }}">
    <link rel="icon" type="image/x-icon" href="{{ asset('ico/logo-positivo.ico') }}">
    <style>
        @font-face {
            font-family: 'Teachers';
            src: url("{{ asset('font/Teachers-VariableFont_wght.ttf') }}");
            font-weight: normal;
            font-style: normal;
        }

        body, input, select, button, option {
            font-family: 'Teachers', sans-serif;
        }

        .btnPark{
            background-color: #1f3de0
        }

        .btnPark:hover{
            background-color: #233181
        }

        .disabled-section {
            pointer-events: none;
            opacity: 0.7;
            cursor: not-allowed;
        }
    </style>
</head>

<body>
    {% include 'partials/headerParking.html.twig' %}

    <main class="container mx-auto px-4 py-8">
        <div class="max-w-3xl mx-auto space-y-12">
            <form id="servicioForm" action="{{ path('bookParkingSimple') }}" method="POST" class="w-full max-w-[340px] mx-auto">
                <!-- Fecha de inicio -->
                <section>
                    <h2 class="text-center text-black text-2xl font-semibold mb-4 bg-neutral-200 rounded-[5px] border border-black py-2">Fecha de inicio</h2>
                    <div class="w-full max-w-[340px] mx-auto">
                        <input type="datetime-local" id="fecha_inicio" name="fecha_inicio" required 
                            class="w-full h-[60px] px-[22px] py-3.5 bg-white rounded-[10px] border border-[#161212] text-center text-black text-xl font-semibold">
                    </div>
                    <div class="w-full flex flex-col space-y-2 justify-center items-center text-sm">
                        <p>Las fechas van en intervalos de 30 minutos, la fecha que elija se adaptará automáticamente a estos intervalos</p> 
                    </div>
                </section>

                <!-- Fecha final -->
                <section>
                    <h2 class="text-center text-black text-2xl font-semibold mb-4 bg-neutral-200 rounded-[5px] border border-black py-2">Fecha final</h2>
                    <div class="w-full max-w-[340px] mx-auto">
                        <input type="datetime-local" id="fecha_final" name="fecha_final" required
                            class="w-full h-[60px] px-[22px] py-3.5 bg-white rounded-[10px] border border-[#161212] text-center text-black text-xl font-semibold">
                    </div>
                    <div class="w-full flex flex-col space-y-2 justify-center items-center text-sm">
                        <p>Las fechas van en intervalos de 30 minutos, la fecha que elija se adaptará automáticamente a estos intervalos</p> 
                    </div>
                </section>

                <!-- Tus vehículos -->
              <section>
                    <h2 class="text-center text-black text-2xl font-semibold mb-4 bg-neutral-200 rounded-[5px] border border-black py-2">Tus vehículos</h2>
                    <div class="relative w-full max-w-[340px] mx-auto">
                        <!-- Cambiado el name a null inicialmente -->
                        <select id="vehiculosDropdown" class="w-full h-[60px] px-[22px] py-3.5 bg-white rounded-[10px] border border-[#161212] text-center text-black text-xl font-semibold">
                            <option value="">Seleccione un vehículo</option>
                            {% if misVehiculos is defined and misVehiculos is not empty %}
                                {% for vehiculo in misVehiculos %}
                                    <option value="{{ vehiculo.matricula }}" data-tipo="{{ vehiculo.tipo }}">
                                        {{ vehiculo.matricula }} ({{ vehiculo.tipo }})
                                    </option>
                                {% endfor %}
                            {% endif %}
                        </select>
                    </div>
                </section>

                <!-- Tipo de vehículo -->
                <section id="tipoVehiculoSection">
                    <h2 class="text-center text-black text-2xl font-semibold mb-4 bg-neutral-200 rounded-[5px] border border-black py-2">Tipo de vehículo</h2>
                    <div class="relative mb-2">
                        <div id="dropdownButtonAuto" 
                            class="w-full h-[60px] px-[22px] py-3.5 bg-white rounded-[10px] border border-[#161212] flex justify-between items-center cursor-pointer">
                            <div id="selectedOptionAuto" class="text-center text-black text-xl font-semibold">Tipo</div>
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" 
                                class="w-6 h-6 transition-transform duration-300">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                            </svg>
                        </div>
                        <div id="dropTipoVehiculo" 
                            class="absolute z-10 right-0 top-0 mt-12 w-48 bg-white rounded-lg border border-[#161212] shadow-lg hidden">
                            <div class="py-1">
                                <div class="option cursor-pointer px-[22px] py-3.5 hover:bg-gray-100" data-value="moto">Moto</div>
                                <div class="option cursor-pointer px-[22px] py-3.5 hover:bg-gray-100" data-value="auto">Auto</div>
                                <div class="option cursor-pointer px-[22px] py-3.5 hover:bg-gray-100" data-value="camioneta">Camioneta</div>
                                <div class="option cursor-pointer px-[22px] py-3.5 hover:bg-gray-100" data-value="camion">Pequeño camión</div>
                                <div class="option cursor-pointer px-[22px] py-3.5 hover:bg-gray-100" data-value="utilitario">Pequeño utilitario</div>
                            </div>
                        </div>
                    </div>
                    <input type="hidden" id="tipoVehiculo" name="tipoVehiculo" value="">
                </section>

                <!-- Matrícula manual -->
                   <div id="matriculaManualSection" class="h-[52px] relative mt-4">
                    <input id="matriculaYa" type="text" 
                        placeholder="O registra ya con Matrícula" 
                        class="space-x-6 p-2 w-[340px] h-[50px] text-[#2f353c] text-[22px] font-normal tracking-wide bg-white rounded-md border border-[#2f353c] text-left">
                </div>

                <!-- Sección de errores -->
                {% if response is defined and response.errors is defined and response.errors is not empty %}
                    <div id="error-container" class="text-red-600 mt-4">
                        <ul id="error-list">
                            {% for error in response.errors %}
                                <li>{{ error }}</li>
                            {% endfor %}
                        </ul>
                    </div>
                {% endif %}

                <!-- Botón de continuar -->
                <button type="submit" 
                    class="w-full max-w-[340px] h-[62px] px-7 py-2.5 duration-300 btnPark rounded-lg text-neutral-50 text-[32px] font-bold leading-[51.78px] mt-4">
                    Continuar
                </button>
            </form>
        </div>
    </main>

    <script src="{{ asset('js/fechaInicioHandler.js') }}"></script>
    <script src="{{ asset('js/fechaFinalHandler.js') }}"></script>
<script>
 document.addEventListener('DOMContentLoaded', function() {
        // Referencias a elementos del DOM
        const form = document.getElementById('servicioForm');
        const vehiculosDropdown = document.getElementById('vehiculosDropdown');
        const tipoVehiculoSection = document.getElementById('tipoVehiculoSection');
        const dropdownButtonAuto = document.getElementById('dropdownButtonAuto');
        const dropdownMenuAuto = document.getElementById('dropTipoVehiculo');
        const selectedOptionAuto = document.getElementById('selectedOptionAuto');
        const selectedVehicleType = document.getElementById('tipoVehiculo');
        const matriculaYa = document.getElementById('matriculaYa');
        const matriculaManualSection = document.getElementById('matriculaManualSection');

        // Control del dropdown de tipo de vehículo
        dropdownButtonAuto.addEventListener('click', () => {
            if (!dropdownButtonAuto.classList.contains('disabled-section')) {
                dropdownMenuAuto.classList.toggle('hidden');
            }
        });

        // Selección de tipo de vehículo
        const optionsAuto = document.querySelectorAll('#dropTipoVehiculo .option');
        optionsAuto.forEach(option => {
            option.addEventListener('click', () => {
                selectedOptionAuto.textContent = option.textContent;
                selectedVehicleType.value = option.dataset.value;
                dropdownMenuAuto.classList.add('hidden');
            });
        });

        // Event listener para el dropdown de vehículos
        vehiculosDropdown.addEventListener('change', function() {
            if (this.value !== "") {
                // Si se seleccionó un vehículo existente
                const selectedOption = this.options[this.selectedIndex];
                const tipo = selectedOption.getAttribute('data-tipo');
                
                selectedOptionAuto.textContent = tipo;
                selectedVehicleType.value = tipo.toLowerCase();
                tipoVehiculoSection.classList.add('disabled-section');
                
                // Limpiar y ocultar matrícula manual
                matriculaYa.value = '';
                matriculaYa.removeAttribute('name');
                matriculaManualSection.style.display = 'none';
                
                // Establecer el name para el vehículo seleccionado
                this.setAttribute('name', 'matricula');
            } else {
                // Si se deseleccionó el vehículo
                tipoVehiculoSection.classList.remove('disabled-section');
                matriculaManualSection.style.display = 'block';
                selectedOptionAuto.textContent = 'Tipo';
                selectedVehicleType.value = '';
                
                // Quitar el name del dropdown
                this.removeAttribute('name');
                // Establecer el name para matrícula manual
                matriculaYa.setAttribute('name', 'matriculaYa');
            }
        });

        // Event listener para matrícula manual
        matriculaYa.addEventListener('input', function() {
            if (this.value !== "") {
                vehiculosDropdown.value = "";
                vehiculosDropdown.removeAttribute('name');
                this.setAttribute('name', 'matriculaYa');
                tipoVehiculoSection.classList.remove('disabled-section');
            } else {
                this.removeAttribute('name');
            }
        });

        // Validación del formulario
        form.addEventListener('submit', function(e) {
            e.preventDefault();

            // Validar fechas
            if (!document.getElementById('fecha_inicio').value || !document.getElementById('fecha_final').value) {
                alert("Debe seleccionar las fechas de inicio y fin.");
                return;
            }

            // Validar selección de vehículo o matrícula manual
            if (vehiculosDropdown.value === "" && matriculaYa.value === "") {
                alert("Debe seleccionar un vehículo o ingresar una matrícula.");
                return;
            }

            // Validar tipo de vehículo para matrícula manual
            if (matriculaYa.value !== "" && selectedVehicleType.value === "") {
                alert("Debe seleccionar un tipo de vehículo.");
                return;
            }

            // Asegurar que solo un campo de matrícula tenga name
            if (matriculaYa.value) {
                matriculaYa.setAttribute('name', 'matriculaYa');
                vehiculosDropdown.removeAttribute('name');
            } else if (vehiculosDropdown.value) {
                vehiculosDropdown.setAttribute('name', 'matricula');
                matriculaYa.removeAttribute('name');
            }

            this.submit();
        });
    });
</script>

    {% include 'partials/footer.html.twig' %}
</body>
</html>