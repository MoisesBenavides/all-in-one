<!DOCTYPE html>
<html lang="es">
<head>
    <!--Es responsivoo-->
    <meta charset="UTF-8">
    <!--SEO-->
    <meta name="description" content="AIO taller mecanico en montevideo, Estacionamiento 24 horas y mas">
    <meta name="keywords" content="Taller mecanico, taller mecanico montevideo, taller mecanico cerca de mi, estacionamiento 24 horas, venta de neumaticos">
    <meta name="author" content="All In One">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reserva de Parking Simple | AIO</title>
    <link rel="stylesheet" href="{{ asset('css/styles.css') }}">
    <link rel="icon" type="image/x-icon" href="{{ asset('ico/logo-positivo.ico') }}">
</head>
<style>
    @font-face {
        font-family: 'Teachers';
        src: url("{{ asset('font/Teachers-VariableFont_wght.ttf') }}");
        font-weight: normal;
        font-style: normal;
    }

    /* Apply the 'Teachers' font to all text elements */
    body, input, select, button, option {
        font-family: 'Teachers', sans-serif;
    }
</style>
<header class=" w-screen  ">
    <link rel="stylesheet" href="{{ asset('css/styles.css') }}">
    <div class="container bg-alternativo mx-auto px-4 py-4">
        <div class="relative flex flex-col md:flex-row justify-between items-center">
            
            <!-- Hamburguesa (visible solo en móviles) - Posicionada en la esquina superior izquierda -->
            <div class="absolute top-2 left-4 md:hidden">
                <button id="hamburger" class="text-black focus:outline-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
                    </svg>
                </button>
            </div>

            <!-- Logo -->
            <div class="w-40 h-auto mb-4 md:mb-0 mx-auto md:mx-0">
                <img class="w-full h-auto" src="{{ asset('img/AIO Parking positivo.png') }}" alt="AIO Logo" />
            </div>

            <!-- Navegación - visible solo en pantallas medianas y grandes -->
            <nav class="hidden md:flex flex-wrap justify-center md:justify-end space-x-2 md:space-x-4">
                <a href="{{ path('aioParking') }}BookSimple" class="text-black text-xs sm:text-sm md:text-lg lg:text-xl font-bold   ">Reservar</a>
                <a href="{{ path('aioParking') }}BookLongTerm" class="text-black text-xs sm:text-sm md:text-lg lg:text-xl font-bold   ">Reservar a largo plazo</a>
                <a href="#" class="text-black text-xs sm:text-sm md:text-lg lg:text-xl font-bold   ">Mis Reservas</a>
                <a href="#" class="text-black text-xs sm:text-sm md:text-lg lg:text-xl font-bold   ">FAQ</a>
            </nav>

            <!-- User icon - Alineado a la derecha en móviles -->
            <div class="absolute top-2 right-4 md:static">
                <img class="w-10 h-10" src="{{ asset('img/user.png') }}" alt="User">
            </div>
        </div>

        <!-- Menú hamburguesa desplegable (oculto por defecto) -->
        <nav id="mobileMenu" class="hidden md:hidden mt-4 space-y-2">
            <a href="{{ path('aioParking') }}BookSimple" class="block text-black text-sm font-bold   ">Reservar</a>
            <a href="{{ path('aioParking') }}BookLongTerm" class="block text-black text-sm font-bold   ">Reservar a largo plazo</a>
            <a href="#" class="block text-black text-sm font-bold   ">Mis Reservas</a>
            <a href="#" class="block text-black text-sm font-bold   ">FAQ</a>
        </nav>
    </div>

    <script>
        // Lógica del menú hamburguesa
        const hamburger = document.getElementById('hamburger');
        const mobileMenu = document.getElementById('mobileMenu');

        hamburger.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
        });
    </script>
       <script>
        const dropdownButton = document.getElementById('dropdownButton');
        const dropdownMenu = document.getElementById('dropdownMenu');
        const selectedOption = document.getElementById('selectedOption');
        const options = document.querySelectorAll('.option');
        const hiddenInput = document.getElementById('selectedVehicleType');
        const arrow = dropdownButton.querySelector('svg');
        const priceInfo = document.getElementById('priceInfo');

        dropdownButton.addEventListener('click', () => {
            dropdownMenu.classList.toggle('hidden');
            arrow.classList.toggle('rotate-180');
        });

        options.forEach(option => {
            option.addEventListener('click', () => {
                selectedOption.textContent = option.textContent;
                hiddenInput.value = option.getAttribute('data-value');
                dropdownMenu.classList.add('hidden');
                arrow.classList.remove('rotate-180');

                // Mostrar el precio por hora
                const price = option.getAttribute('data-price');
                priceInfo.textContent = `Precio por hora: ${price} pesos`;
                priceInfo.classList.remove('hidden');
            });
        });

        // Cerrar el menú si se hace clic fuera de él
        window.addEventListener('click', (e) => {
            if (!dropdownButton.contains(e.target) && !dropdownMenu.contains(e.target)) {
                dropdownMenu.classList.add('hidden');
                arrow.classList.remove('rotate-180');
            }
        });
    </script>
</header>
<body>
    <main class="container mx-auto px-4 py-8">
       <div class="max-w-3xl mx-auto space-y-12">
          <form id="servicioForm" action="{{ path('bookParkingSimple') }}" method="POST" class="w-full max-w-[340px] mx-auto">
             <section>
                <h2 class="text-center text-black text-2xl font-semibold mb-4 bg-neutral-200 rounded-[5px] border border-black py-2">Ingrese la fecha de inicio</h2>
                <div class="w-full max-w-[340px] mx-auto">
                   <input type="datetime-local" name= "fecha_inicio" class="w-full h-[60px] px-[22px] py-3.5 bg-white rounded-[10px] border border-[#161212] text-center text-black text-xl font-semibold">
                </div>
             </section>
             <section>
                <h2 class="text-center text-black text-2xl font-semibold mb-4 bg-neutral-200 rounded-[5px] border border-black py-2">Ingrese la fecha final</h2>
                <div class="w-full max-w-[340px] mx-auto">
                   <input type="datetime-local" name= "fecha_final" class="w-full h-[60px] px-[22px] py-3.5 bg-white rounded-[10px] border border-[#161212] text-center text-black text-xl font-semibold">
                </div>
             </section>
             <section id="tipoVehiculoSection">
                <h2 class="text-center text-black text-2xl font-semibold mb-4 bg-neutral-200 rounded-[5px] border border-black py-2">Ingrese el tipo de vehículo</h2>
                <div class="relative mb-2">
                   <div id="dropdownButtonAuto" class="w-full h-[60px] px-[22px] py-3.5 bg-white rounded-[10px] border border-[#161212] flex justify-between items-center cursor-pointer">
                      <div id="selectedOptionAuto" class="text-center text-black text-xl font-semibold">Tipo</div>
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-6 h-6 transition-transform duration-300">
                         <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                      </svg>
                   </div>
                   <div id="dropTipoVehiculo" class="absolute z-10 right-0 top-0 mt-12 w-48 bg-white rounded-lg border border-[#161212] shadow-lg hidden">
                      <div class="py-1">
                         <div class="option cursor-pointer px-[22px] py-3.5 hover:bg-gray-100" data-value="moto" data-price="100">Moto</div>
                         <div class="option cursor-pointer px-[22px] py-3.5 hover:bg-gray-100" data-value="camioneta" data-price="250">Camioneta</div>
                         <div class="option cursor-pointer px-[22px] py-3.5 hover:bg-gray-100" data-value="auto" data-price="200">Auto</div>
                         <div class="option cursor-pointer px-[22px] py-3.5 hover:bg-gray-100" data-value="camion" data-price="300">Pequeño camión</div>
                         <div class="option cursor-pointer px-[22px] py-3.5 hover:bg-gray-100" data-value="utilitario" data-price="300">Pequeño utilitario</div>
                      </div>
                   </div>
                </div>
                <input type="hidden" id="tipoVehiculo" name="tipoVehiculo" value="">
             </section>
             <script>
                // Dropdown functionality for vehicle type selection
                const dropdownButtonAuto = document.getElementById('dropdownButtonAuto');
                const dropdownMenuAuto = document.getElementById('dropTipoVehiculo');
                const selectedOptionAuto = document.getElementById('selectedOptionAuto');
                const selectedVehicleType = document.getElementById('tipoVehiculo');
                
                dropdownButtonAuto.addEventListener('click', () => {
                    dropdownMenuAuto.classList.toggle('hidden');
                });
                
                const optionsAuto = document.querySelectorAll('#dropTipoVehiculo .option');
                optionsAuto.forEach(option => {
                    option.addEventListener('click', () => {
                        selectedOptionAuto.textContent = option.textContent;
                        selectedVehicleType.value = option.dataset.value;
                        dropdownMenuAuto.classList.add('hidden');
                    });
                });
             </script>
             <section>
                <h2 class="text-center text-black text-2xl font-semibold mb-4 bg-neutral-200 rounded-[5px] border border-black py-2">Tus vehículos</h2>
                <div class="relative w-full max-w-[340px] mx-auto">
                    <select id="vehiculosDropdown" name="matricula" class="w-full h-[60px] px-[22px] py-3.5 bg-white rounded-[10px] border border-[#161212] text-center text-black text-xl font-semibold">
                        {# Mensaje por defecto #}
                        <option value="" selected disabled>Seleccione un vehículo</option>

                        {# Mostrar los vehículos si tiene vinculados, o deshabilitar dropdown#}
                        {% if vehiculos is not empty %}
                            {% for vehiculo in vehiculos %}
                                <option value="{{ vehiculo.matricula }}">{{ vehiculo.tipo }} ({{ vehiculo.tipo }})</option>
                            {% endfor %}
                        {% else %}
                            <option value="" disabled>No tienes vehículos vinculados</option>
                        {% endif %}
                    </select>
                </div>
             </section>
             <div class="h-[52px] relative  ">
                <!--INPUT PARA MATRICULA-->
                <input id="matriculaYa" name="matriculaYa" type="text" placeholder="O registra ya con Matrícula" class="space-x-6  p-2 w-[340px] h-[50px]  text-[#2f353c] text-[22px] font-normal   tracking-wide bg-white rounded-md border border-[#2f353c]   text-left">
             </div>
             <section class="text-center"></section>
             <!-- DIV PARA ERRORES DE PHP -->
            <div id="error-container" style="display: none; background-color: #ffcccc; color: #ff0000; padding: 10px; margin-bottom: 10px;"></div>
             <!--  FINAL DE DIV PARA ERRORES DE PHP -->
             <!--Continuar-->
             <button type="submit" class="w-full max-w-[340px] h-[62px] px-7 py-2.5 bg-[#950d03] rounded-lg text-neutral-50 text-[32px] font-bold leading-[51.78px]">Continuar</button>
             </section>
          </form>
       </div>
    </main>

    <script>
        // Código para validar el envío del formulario
        const form = document.getElementById('servicioForm');
        form.addEventListener('submit', (e) => {
            e.preventDefault();
            
            // Verificar si el usuario seleccionó un vehículo o ingresó uno manualmente
            const vehiculoDropdown = document.getElementById('vehiculosDropdown');
            const matriculaYa = document.getElementById('matriculaYa');
        
            if (vehiculoDropdown.value === "" && matriculaYa.value === "") {
                alert("Debe seleccionar un vehículo o ingresar una matrícula.");
            } else {
                if (vehiculoDropdown.value !== "") {
                    matriculaYa.value = "";  // Si seleccionó un vehículo, limpiar el campo de matrícula manual
                }
                form.submit();  // Enviar el formulario si todo es válido
            }
        });
        </script>
{#    <script>
        function cargarMisVehiculos() {
            console.log("Cargando vehículos...");
            $.ajax({
                url: '{{ asset('data/misVehiculos.json') }}'  // Ruta del archivo JSON
                dataType: 'json',  // El tipo de datos que se espera es JSON
                success: function(response) {
                    console.log(response);
                    var vehiculosDropdown = $('#vehiculosDropdown');
                    var tiposDropdown = $('#dropTipoVehiculo');
                    vehiculosDropdown.find('option:not(:first)').remove();  // Limpiar las opciones previas
    
                    var inputMatricula = $('#matriculaYa');
                    var tipoVehiculoSection = $('#tipoVehiculoSection'); // Seleccionar la sección del tipo de vehículo
    
                    // Ocultar la sección del tipo de vehículo al cargar
                    tipoVehiculoSection.hide();
    
                    // Si no hay vehículos, deshabilitar el dropdown y mostrar el input de matrícula
                    if (response.length === 0) {
                        vehiculosDropdown.prop('disabled', true);
                        tiposDropdown.prop('disabled', false); // Mostrar y habilitar el dropdown de tipo
                        inputMatricula.prop('disabled', false).show(); // Mostrar y habilitar el input de matrícula
                        tipoVehiculoSection.show(); // Mostrar la sección si no hay vehículos
                    } else {
                        // Llenar el dropdown con los vehículos
                        response.forEach(function(vehiculo) {
                            var matricula = vehiculo.matricula;
                            var tipo = vehiculo.tipo;
    
                            // Agregar cada vehículo al dropdown
                            vehiculosDropdown.append($('<option>', {
                                value: matricula,
                                text: matricula + ' - ' + tipo
                            }));
                        });
    
                        // Habilitar el dropdown si hay vehículos y ocultar el input de matrícula
                        vehiculosDropdown.prop('disabled', false);
                        inputMatricula.prop('disabled', true).hide(); // Ocultar el input de matrícula
    
                        // Agregar un evento change para establecer el tipo en el input oculto
                        vehiculosDropdown.on('change', function() {
                            var selectedMatricula = $(this).val();
                            var selectedVehiculo = response.find(v => v.matricula === selectedMatricula);
                            if (selectedVehiculo) {
                                // Setear el tipo en el input oculto
                                $('#tipoVehiculo').val(selectedVehiculo.tipo); // Establecer el valor en el input oculto
    
                                // También puedes mostrar el tipo en el dropdown de tipos si es necesario
                                tiposDropdown.find('.option').each(function() {
                                    if ($(this).data('value') === selectedVehiculo.tipo) {
                                        $(this).addClass('selected'); // Agregar una clase para indicar la selección
                                        tiposDropdown.show(); // Mostrar el dropdown si es necesario
                                    } else {
                                        $(this).removeClass('selected'); // Limpiar la selección anterior
                                    }
                                });
    
                                tiposDropdown.prop('disabled', true).hide(); // Deshabilitar y ocultar el dropdown de tipo
                            }
                        });
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error al cargar los vehículos desde el archivo JSON:', error);
                }
            });
        }
    
        // Ejecutar la función cuando se cargue la página
        $(document).ready(function() {
            cargarMisVehiculos();
        });
    </script>
#}         
    <script>
       document.getElementById('servicioForm').addEventListener('submit', function(e) {
           e.preventDefault();
           
           fetch(this.action + '&' + new URLSearchParams(new FormData(this)))
               .then(response => response.json())
               .then(data => {
                   const errorContainer = document.getElementById('error-container');
                   const errorList = document.getElementById('error-list');
                   
                   errorList.innerHTML = '';
                   
                   if (data.success) {
                       window.location.href = 'index.php?action=home';
                   } else {
                       errorContainer.classList.remove('hidden');
                       data.errors.forEach(error => {
                           const li = document.createElement('li');
                           li.textContent = error;
                           errorList.appendChild(li);
                       });
       
                       // Debug information
                       console.log('Debug info:', data.debug);
                       const debugInfo = document.createElement('pre');
                       debugInfo.textContent = JSON.stringify(data.debug, null, 2);
                       errorList.appendChild(debugInfo);
                   }
               })
               .catch(error => {
                   console.error('Error:', error);
               });
       });
    </script>
 </body>
</html>
