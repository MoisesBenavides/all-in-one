<header class="w-screen">
    <div class="container mx-auto px-4 py-4">
        <div class="relative flex flex-col md:flex-row justify-between items-center">
            <!-- Hamburguesa (visible solo en móviles) -->
            <div class="absolute top-2 left-4 md:hidden">
                <button id="hamburger" class="text-black focus:outline-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
                    </svg>
                </button>
            </div>

            <!-- Logo -->
            <a href="{{ path('home') }}" class="flex justify-center md:justify-start">
                <div class="w-32 sm:w-40 h-auto mb-4 md:mb-0">
                    <img class="w-full h-auto" src="{{ asset('img/AIO Positivo.png') }}" alt="AIO Logo" />
                </div>
            </a>

            <!-- Navegación -->
            <nav class="hidden md:flex flex-wrap justify-center md:justify-end space-x-2 md:space-x-4 items-center">
                <a href="{{ path('services') }}" traducir="services" class="text-black text-xs sm:text-sm md:text-base lg:text-lg font-bold hover:text-gray-600 transition-colors">Servicios</a>
                <a href="{{ path('aioParking') }}" traducir="aioParking" class="text-black text-xs sm:text-sm md:text-base lg:text-lg font-bold hover:text-gray-600 transition-colors">AIO Parking</a>
                <a href="{{ path('products') }}" traducir="products" class="text-black text-xs sm:text-sm md:text-base lg:text-lg font-bold hover:text-gray-600 transition-colors">Repuestos y accesorios</a>
                <a href="{{ path('faq') }}" traducir="faq" class="text-black text-xs sm:text-sm md:text-base lg:text-lg font-bold hover:text-gray-600 transition-colors">FAQ</a>
            </nav>

            <!-- Contenedor de idioma y usuario -->
            <div class="flex items-center space-x-4 mt-4 md:mt-0">
                <!-- Selector de idioma -->
                <div class="relative">
                    <!-- Botón de idioma actual -->
                    <button id="languageToggle" class="flex items-center space-x-2 hover:scale-105 transition-transform duration-300 focus:outline-none p-2 rounded-lg hover:bg-gray-100">
                        <img src="{{ asset('img/world.png') }}" alt="Language" class="w-5 h-5 object-cover">
                        <span id="currentLanguage" class="text-xs sm:text-sm uppercase font-medium hidden sm:inline"></span>
                    </button>

                    <!-- Menú de idiomas (desplegable) -->
                    <div id="languageMenu" class="hidden absolute right-0 top-full mt-2 bg-white rounded-lg shadow-lg z-50 min-w-[150px] transform origin-top-right transition-all duration-200">
                        <div class="p-1">
                            <button data-idioma="es" class="w-full flex items-center space-x-2 px-3 py-2 rounded-md hover:bg-gray-100 transition-colors">
                                <img src="{{ asset('img/es.png') }}" alt="Español" class="w-5 h-4 object-cover">
                                <span class="text-sm">ESPAÑOL</span>
                            </button>
                            <button data-idioma="it" class="w-full flex items-center space-x-2 px-3 py-2 rounded-md hover:bg-gray-100 transition-colors">
                                <img src="{{ asset('img/it.png') }}" alt="Italiano" class="w-5 h-4 object-cover">
                                <span class="text-sm">ITALIANO</span>
                            </button>
                            <button data-idioma="en" class="w-full flex items-center space-x-2 px-3 py-2 rounded-md hover:bg-gray-100 transition-colors">
                                <img src="{{ asset('img/en.png') }}" alt="English" class="w-5 h-4 object-cover">
                                <span class="text-sm">ENGLISH</span>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- User icon -->
                <a href="{{ path('myAccount') }}" class="hover:scale-110 transition-transform duration-300 p-2">
                    <img class="w-6 h-6 sm:w-8 sm:h-8" src="{{ asset('img/user.png') }}" alt="User">
                </a>
            </div>
        </div>

        <!-- Menú hamburguesa móvil -->
        <nav id="mobileMenu" class="hidden md:hidden mt-4 py-2 space-y-3 bg-white rounded-lg shadow-lg">
            <a href="{{ path('services') }}" traducir="services" class="block text-black text-sm font-bold px-4 py-2 hover:bg-gray-100">Servicios</a>
            <a href="{{ path('aioParking') }}" traducir="aioParking" class="block text-black text-sm font-bold px-4 py-2 hover:bg-gray-100">AIO Parking</a>
            <a href="{{ path('products') }}" traducir="products" class="block text-black text-sm font-bold px-4 py-2 hover:bg-gray-100">Repuestos y accesorios</a>
            <a href="{{ path('faq') }}" traducir="faq" class="block text-black text-sm font-bold px-4 py-2 hover:bg-gray-100">FAQ</a>
        </nav>
    </div>

    <script src="{{ asset('js/traduccion.js') }}"></script>
    <script>
      // Elementos del DOM
    const hamburger = document.getElementById('hamburger');
    const mobileMenu = document.getElementById('mobileMenu');
    const languageToggle = document.getElementById('languageToggle');
    const languageMenu = document.getElementById('languageMenu');
    const currentLanguage = document.getElementById('currentLanguage');

    // Objeto con los nombres de los idiomas en mayúsculas
    const languageNames = {
        'es': 'ESPAÑOL',
        'it': 'ITALIANO',
        'en': 'ENGLISH'
    };

    // Función para obtener el valor de una cookie
    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) {
            return parts.pop().split(';').shift();
        }
        return 'es'; // Idioma por defecto si no hay cookie
    }

    // Función para actualizar el texto del idioma
    function updateLanguageDisplay(idioma) {
        if (languageNames[idioma]) {
            currentLanguage.textContent = languageNames[idioma];
        }
    }

    // Lógica del menú hamburguesa
    hamburger.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
    });

    // Lógica del menú de idiomas
    languageToggle.addEventListener('click', (e) => {
        e.stopPropagation();
        languageMenu.classList.toggle('hidden');
    });

    // Cerrar menú de idiomas al hacer afuera
    document.addEventListener('click', (event) => {
        if (!languageToggle.contains(event.target) && !languageMenu.contains(event.target)) {
            languageMenu.classList.add('hidden');
        }
    });

    // Manejar selección de idioma
    languageMenu.querySelectorAll('button').forEach(button => {
        button.addEventListener('click', (e) => {
            const idioma = e.currentTarget.getAttribute('data-idioma');
            updateLanguageDisplay(idioma);
            cambiarIdioma(idioma);
            languageMenu.classList.add('hidden');
        });
    });

    // Lógica de traducción
    const archivoTraduccionHeader = "{{ asset('traductions/header.json') }}";

    // Inicializar traducción y mostrar idioma actual cuando el DOM está listo
    document.addEventListener('DOMContentLoaded', () => {
        // Obtener el idioma de la cookie
        const savedLanguage = getCookie('idioma');
        // Actualizar el texto mostrado
        updateLanguageDisplay(savedLanguage);
        // Inicializar traducción con el idioma guardado
        inicializarTraduccion(archivoTraduccionHeader, savedLanguage);
    });

    //  Cerrar el menú móvil al cambiar el tamaño de la ventana
    window.addEventListener('resize', () => {
        if (window.innerWidth >= 768) {
            mobileMenu.classList.add('hidden');
        }
    });

    //  Cerrar menús al presionar la tecla Escape, para mejor manejo con teclado para accesibilidad :)
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            mobileMenu.classList.add('hidden');
            languageMenu.classList.add('hidden');
        }
    });

    // Actualizar el idioma mostrado si cambia la cookie
    window.addEventListener('storage', (e) => {
        if (e.key === 'idioma') {
            updateLanguageDisplay(e.newValue || 'es');
        }
    });
    </script>
</header>