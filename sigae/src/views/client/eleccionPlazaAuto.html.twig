<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="AIO taller mecanico en montevideo, Estacionamiento 24 horas y mas">
    <meta name="keywords" content="Taller mecanico, taller mecanico montevideo, taller mecanico cerca de mi, estacionamiento 24 horas, venta de neumaticos">
    <meta name="author" content="All In One">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="{{ asset('css/styles.css') }}">
    <link rel="icon" type="image/x-icon" href="{{ asset('ico/logo-positivo.ico') }}">
    <title>Elección de plaza | AIO</title>
    <style>
        @font-face {
            font-family: 'Teachers';
            src: url("{{ asset('font/Teachers-VariableFont_wght.ttf') }}");
            font-weight: normal;
            font-style: normal;
        }

        body,
        input,
        select,
        button,
        option {
            font-family: 'Teachers', sans-serif;
        }
    </style>
</head>

<body class="bg-white">
    <div class="w-full max-w-[1440px] px-4 py-8 mx-auto flex flex-col items-center gap-8">
        <div
            class="w-full max-w-[896px] h-[46px] px-4 py-2 bg-[#d9d9d9] rounded-[10px] border border-[#c5b8b8] flex justify-center items-center gap-2.5">
            <button id="decrementFloor" class="w-[30px] h-[30px] bg-gray-100 rounded-full flex items-center justify-center">&lt;</button>
            <div id="floorDisplay" class="text-center text-black text-base font-medium">Piso 1</div>
            <button id="incrementFloor" class="w-[30px] h-[30px] bg-gray-100 rounded-full flex items-center justify-center">&gt;</button>
        </div>
        <div class="w-full flex flex-col space-y-2 justify-center items-center text-sm">
            <p><strong>B1-20:</strong> Motos (solo primer piso)</p> 
            <p><strong>A1-50:</strong> Autos, camionetas y pequeños camiones (primer piso)</p> 
            <p><strong>C1-50:</strong> Autos, camionetas y pequeños camiones (segundo piso)</p>
        </div>
          
        <form id="parkingForm" action="respuesta.php" method="POST">
            <div id="parkingContainer"
                class="w-full max-w-[600px] h-auto min-h-[359px] p-4 pt-8 bg-white border border-black relative">
            <!-- Parking spots will be generated here -->
            </div>

            <input type="hidden" name="selectedSpots" id="selectedSpotsInput">
            <div class="w-full max-w-[388px] flex justify-center mt-4">
                <button type="submit" class="w-full max-w-[340px] h-[62px] px-7 py-2.5 bg-[#950d03] rounded-lg text-neutral-50 text-[32px] font-bold leading-[51.78px]">
                    Continuar
                </button>
            </div>
        </form>
    </div>
    <script>
let puestosOcupados = [];
let selectedSpots = [];
let vehicleType = "pequenoCamion"; // "auto", "moto", o "pequenoCamion"
let currentFloor = 1;

// Fetch para traer los puestos ocupados desde el archivo PHP
fetch('ARCHIVO QUE TRAE OUESTOS OCUPADOS')
    .then(response => response.json())
    .then(data => {
        puestosOcupados = data;
        generateParkingLayout();
    })
    .catch(error => console.error('Error:', error));

function generateParkingLayout() {
    const container = document.getElementById('parkingContainer');
    container.innerHTML = ''; // borra el contendio existente

    if (vehicleType === "moto" && currentFloor === 2) {
        container.innerHTML = '<p class="text-center text-red-500">Las motos solo pueden estacionar en el primer piso.</p>';
        return;
    }

    if (vehicleType === "auto" || vehicleType === "pequenoCamion") {
        generateAutoTruckLayout(container);
    } else if (vehicleType === "moto" && currentFloor === 1) {
        generateMotoLayout(container);
    }
}

function generateAutoTruckLayout(container) {
    const prefix = currentFloor === 1 ? 'A' : 'C';
    const leftColumn = createParkingColumn(1, 20, prefix);
    const middleColumn = createParkingColumn(21, 30, prefix);
    const rightColumn = createParkingColumn(31, 50, prefix);

    container.appendChild(createDiv('flex justify-center gap-[150px] h-full', [
        createDiv('flex flex-col justify-start overflow-y-auto', [leftColumn]),
        createDiv('flex flex-col justify-end', [
            middleColumn,
            createDiv('w-[45px] h-[108px] border-t border-b border-l border-black')
        ]),
        createDiv('flex flex-col justify-start overflow-y-auto', [rightColumn])
    ]));
}

function generateMotoLayout(container) {
    const motoSpots = createParkingColumn(1, 20, 'B');
    container.appendChild(createDiv('flex', [
        createDiv('w-1/4', [motoSpots]),
        createDiv('w-3/4')
    ]));
}

function createParkingColumn(start, end, prefix) {
    const column = document.createElement('div');
    column.className = 'flex flex-col';
    for (let i = start; i <= end; i++) {
        column.appendChild(createParkingSpot(i, prefix));
    }
    return column;
}

function createParkingSpot(number, prefix) {
    const spotId = `${prefix}${number}`;
    const spot = document.createElement('button');
    spot.className = 'flex items-center justify-center border border-black m-0.5 cursor-pointer transition-colors w-14 h-10 hover:bg-gray-100';
    spot.innerHTML = `<div class="text-center text-black text-xs font-bold">${spotId}</div>`;
    spot.dataset.spot = spotId;
    spot.type = 'button';

    if (puestosOcupados.includes(spotId)) {
        spot.classList.add('bg-gray-500', 'text-white', 'cursor-not-allowed');
        spot.disabled = true;
    } else {
        spot.addEventListener('click', function(e) {
            e.preventDefault();
            if (vehicleType === "pequenoCamion") {
                handlePequenoCamionSpotSelection(this);
            } else {
                handleRegularSpotSelection(this);
            }
        });
    }

    return spot;
}

function handleRegularSpotSelection(spot) {
    selectedSpots.forEach(s => s.classList.remove('bg-[#5381c6]', 'text-white'));
    selectedSpots = [spot];
    spot.classList.add('bg-[#5381c6]', 'text-white');
}

function handlePequenoCamionSpotSelection(spot) {
    if (selectedSpots.length === 0) {
        // Primer spot seleccionado
        selectedSpots.push(spot);
        spot.classList.add('bg-[#5381c6]', 'text-white');
    } else if (selectedSpots.length === 1) {
        // Verificar si el nuevo spot es adyacente al spot ya seleccionado
        if (isAdjacentSpot(selectedSpots[0], spot)) {
            selectedSpots.push(spot);
            spot.classList.add('bg-[#5381c6]', 'text-white');
        } else {
            // Si no es adyacente, deseleccionar el spot anterior y seleccionar el nuevo
            selectedSpots[0].classList.remove('bg-[#5381c6]', 'text-white');
            selectedSpots = [spot];
            spot.classList.add('bg-[#5381c6]', 'text-white');
        }
    } else if (selectedSpots.length === 2) {
        // Si ya hay dos spots seleccionados, deseleccionar ambos y seleccionar el nuevo
        selectedSpots.forEach(s => s.classList.remove('bg-[#5381c6]', 'text-white'));
        selectedSpots = [spot];
        spot.classList.add('bg-[#5381c6]', 'text-white');
    }
}

function isAdjacentSpot(spot1, spot2) {
    const id1 = spot1.dataset.spot;
    const id2 = spot2.dataset.spot;
    
    // Extraer el prefijo osea letra y el número de cada spot
    const prefix1 = id1.charAt(0);
    const prefix2 = id2.charAt(0);
    const num1 = parseInt(id1.slice(1));
    const num2 = parseInt(id2.slice(1));
    
    // Verificar si los spots están en la misma columna y son números consecutivos
    return prefix1 === prefix2 && Math.abs(num1 - num2) === 1;
}

function createDiv(className, children = []) {
    const div = document.createElement('div');
    div.className = className;
    children.forEach(child => {
        if (child instanceof Node) {
            div.appendChild(child);
        }
    });
    return div;
}

document.getElementById('parkingForm').addEventListener('submit', function(e) {
    e.preventDefault();
    let output;
    if (vehicleType === "pequenoCamion") {
        output = selectedSpots.map(spot => spot.dataset.spot);
    } else {
        output = [selectedSpots.length > 0 ? selectedSpots[0].dataset.spot : null, null];
    }
    document.getElementById('selectedSpotsInput').value = JSON.stringify(output);
    this.submit();
});

function updateFloorDisplay() {
    document.getElementById('floorDisplay').textContent = `Piso ${currentFloor}`;
}

document.getElementById('decrementFloor').addEventListener('click', function() {
    if (currentFloor > 1) {
        currentFloor--;
        updateFloorDisplay();
        generateParkingLayout();
    }
});

document.getElementById('incrementFloor').addEventListener('click', function() {
    if (currentFloor < 2 && vehicleType !== "moto") {
        currentFloor++;
        updateFloorDisplay();
        generateParkingLayout();
    }
});

// inicia cuando cargan los elementos del DOM
document.addEventListener('DOMContentLoaded', function() {
    updateFloorDisplay();
    generateParkingLayout();
});
    </script>
</body>
    <footer class="w-screen bg-[#514e4e] ">      
    <div class="  text-white py-12 container mx-auto px-4">
        <div class="flex flex-col md:flex-row justify-between items-center">
            <div class="mb-8 md:mb-0">
                <img class="w-48 h-auto mb-6" src="{{ asset('img/AIO Negativo (1).png') }}" alt="AIO Logo" />
                <div class="space-y-4">
                    <div class="flex items-center">
                        <img class="w-8 h-8 mr-4" src="{{ asset('img/InstagramLogo.png') }}" alt="Instagram" />
                        <span class="text-lg font-bold   ">@Aiotalleres</span>
                    </div>
                    <div class="flex items-center">
                        <img class="w-8 h-8 mr-4" src="{{ asset('img/XLogo.png') }}" alt="Twitter" />
                        <span class="text-lg font-bold   ">@Aiotalleres</span>
                    </div>
                    <div class="flex items-center">
                        <img class="w-8 h-8 mr-4" src="{{ asset('img/TelefonoLogo.png') }}" alt="Teléfono" />
                        <span class="text-lg font-bold   ">+598 99 123 456</span>
                    </div>
                </div>
            </div>
            <div class="w-full md:w-1/2 h-64 md:h-72">
                <div id="map" class="w-full h-full rounded-lg"></div>
            </div>
        </div>
    </div>
      <script>
        function initMap() {
          const map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: -34.8730391, lng: -56.1719804 },
            zoom: 20,
          });
        }
      </script>
      <script
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBDaeWicvigtP9xPv919E-RNoxfvC-Hqik&callback=initMap"
        async
      ></script>
    </footer>

</html>
