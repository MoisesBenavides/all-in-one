<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="description" content="AIO taller mecanico en montevideo, Estacionamiento 24 horas y mas">
    <meta name="keywords" content="Taller mecanico, taller mecanico montevideo, taller mecanico cerca de mi, estacionamiento 24 horas, venta de neumaticos">
    <meta name="author" content="All In One">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inventario | AIO</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @font-face {
            font-family: 'Teachers';
            src: url("{{ asset('font/Teachers-VariableFont_wght.ttf') }}");
            font-weight: normal;
            font-style: normal;
        }
        body {
            font-family: 'Teachers', sans-serif;
        }

        .editing-mode {
            background-color: #f0f9ff;
            border-color: #3b82f6;
            box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);
        }

        .editing-mode input:not([readonly]) {
            background-color: white !important;
            border: 1px solid #3b82f6 !important;
            padding: 0.25rem 0.5rem;
            border-radius: 0.375rem;
        }

        .edit-button {
            display: none;
        }

        .editing-mode .edit-button {
            display: inline-flex;
        }
    </style>
</head>

<body class="bg-gray-50">
    {% include 'partials/headerGerente.html.twig' %}

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Header Section -->
        <div class="bg-neutral-400 rounded-2xl shadow-lg mb-8 p-8">
            <h1 class="text-white text-4xl font-bold text-center">Inventario</h1>
        </div>

        <!-- Search Section -->
        <div class="max-w-2xl mx-auto mb-12">
            <div class="relative">
                <input 
                    type="text" 
                    id="buscar" 
                    placeholder="Buscar productos..." 
                    class="w-full h-14 px-6 rounded-xl border-2 border-gray-200 focus:border-black focus:ring-2 focus:ring-black focus:outline-none transition duration-300 ease-in-out"
                >
            </div>
        </div>
            {% if response.errors is defined and response.errors is not empty %}
                    <div id="error-container" class="text-[#950d03] p-4 rounded-md mb-4">
                        <ul id="error-list">
                            {% for error in response.errors %}
                                <li>{{ error }}</li>
                            {% endfor %}
                        </ul>
                    </div>
                {% endif %}
        <div class="max-w-7xl mx-auto flex gap-4 mb-12">
            <!-- Neumático Form -->
            <div class="flex-1">
                <button id="add-tire-btn" type="button" 
                        class="text-neutral-100 w-full px-7 py-3 bg-neutral-400 border border-black rounded-lg text-lg font-semibold hover:bg-neutral-600 transition-colors duration-200 flex justify-between items-center">
                    <span>Agregar Neumático</span>
                    <img src="{{ asset('svg/iconDropDown.svg') }}" alt="Dropdown icon" 
                        class="w-5 h-5 transform transition-transform duration-300" id="tire-dropdown-icon">
                </button>
                <form id="new-tire-form" action="{{ path('addNewTyre') }}" method="POST" 
                    class="hidden space-y-6 mt-4 p-4 border border-slate-300 rounded-md">
                    <div class="space-y-4">
                        <!-- Producto Fields -->
                        <div>
                            <label for="tire-upc" class="block text-lg font-medium text-neutral-900 mb-2">
                                UPC *
                            </label>
                            <input type="text" id="tire-upc" name="upc" required
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ingrese el UPC">
                        </div>

                        <div>
                            <label for="tire-precio" class="block text-lg font-medium text-neutral-900 mb-2">
                                Precio *
                            </label>
                            <input type="number" id="tire-precio" name="precio" required step="0.01"
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ej: 100.00 (es necesario poner dos decimales al final)">
                        </div>

                        <div>
                            <label for="tire-marca" class="block text-lg font-medium text-neutral-900 mb-2">
                                Marca *
                            </label>
                            <input type="text" id="tire-marca" name="marca" required
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ingrese la marca">
                        </div>

                        <!-- Neumático Fields -->
                        <div>
                            <label for="tire-tamano" class="block text-lg font-medium text-neutral-900 mb-2">
                                Tamaño *
                            </label>
                            <input type="text" id="tire-tamano" name="tamano" required
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ej:63/19-50-94-y">
                        </div>

                        <div>
                            <label for="tire-modelo" class="block text-lg font-medium text-neutral-900 mb-2">
                                Modelo *
                            </label>
                            <input type="text" id="tire-modelo" name="modelo" required
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ingrese el modelo">
                        </div>

                        <div>
                            <label for="tire-tipo" class="block text-lg font-medium text-neutral-900 mb-2">
                                Tipo *
                            </label>
                            <input type="text" id="tire-tipo" name="tipo" required
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ingrese el tipo">
                        </div>

                        <div>
                            <button type="submit" 
                                    class="w-full px-6 py-3 duration-300 bg-red-600 hover:bg-red-700 text-white text-xl font-bold rounded-lg transition-colors">
                                Guardar
                            </button>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Other Product Form -->
            <div class="flex-1">
                <button id="add-product-btn" type="button" 
                        class="text-neutral-100 w-full px-7 py-3 bg-neutral-400 border border-black rounded-lg text-lg font-semibold hover:bg-neutral-600 transition-colors duration-200 flex justify-between items-center">
                    <span>Agregar Accesorio o Repuesto</span>
                    <img src="{{ asset('svg/iconDropDown.svg') }}" alt="Dropdown icon" 
                        class="w-5 h-5 transform transition-transform duration-300" id="product-dropdown-icon">
                </button>
                <form id="new-product-form" action="{{ path('addNewAccessory') }}" method="POST" 
                    class="hidden space-y-6 mt-4 p-4 border border-slate-300 rounded-md">
                    <div class="space-y-4">
                        <div>
                            <label for="product-upc" class="block text-lg font-medium text-neutral-900 mb-2">
                                UPC *
                            </label>
                            <input type="text" id="product-upc" name="upc" required
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ingrese el UPC">
                        </div>

                        <div>
                            <label for="product-precio" class="block text-lg font-medium text-neutral-900 mb-2">
                                Precio *
                            </label>
                            <input type="number" id="product-precio" name="precio" required step="0.01"
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ej: 100.00 (es necesario poner dos decimales al final)">
                        </div>

                        <div>
                            <label for="product-marca" class="block text-lg font-medium text-neutral-900 mb-2">
                                Marca *
                            </label>
                            <input type="text" id="product-marca" name="marca" required
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ingrese la marca">
                        </div>

                        <div>
                            <label for="product-nombre" class="block text-lg font-medium text-neutral-900 mb-2">
                                Nombre *
                            </label>
                            <input type="text" id="product-nombre" name="nombre" required
                                class="w-full px-3 py-2 bg-white rounded-md border border-slate-300 text-sm"
                                placeholder="Ingrese el nombre">
                        </div>

                        <div>
                            <button type="submit" 
                                    class="w-full px-6 py-3 duration-300 bg-red-600 hover:bg-red-700 text-white text-xl font-bold rounded-lg transition-colors">
                                Guardar
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    <div id="successAlert" class="hidden fixed top-4 right-4 bg-green-500 text-white px-6 py-4 rounded-lg shadow-lg transition-opacity duration-500">
        <p class="flex items-center">
            <span class="mr-2">✓</span>
            <span id="alertMessage">Producto agregado exitosamente</span>
        </p>
    </div>

        <!-- No Results Message -->
        <div id="noResults" class="hidden text-center py-8">
            <p class="text-gray-500 text-lg">No se encontraron productos que coincidan con la búsqueda.</p>
        </div>

        <!-- Products Grid -->
        <div id="productosContainer" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {% for producto in productos %}
                <div class="product bg-white rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
                {% if producto.nombre is defined and producto.nombre %}
                    <form class="product-form" id="product-form-{{ producto.id }}" action="{{path('editAccessory')}}" method="POST">
                {% elseif producto.tamano is defined and producto.tamano  %}
                        <form class="product-form" id="product-form-{{ producto.id }}" action="{{path('editTyre')}}" method="POST">
                {% endif %}
                        <!-- Product Image -->
                        <div class="w-full h-48 bg-gray-50 rounded-t-xl overflow-hidden">
                            <img 
                                src="{{ asset('img/productos/' ~ producto.id ~ '.webp') }}"
                                alt="{{ producto.nombre|default(producto.modelo|default('Producto')) }}"
                                class="w-full h-full object-contain"
                                onload="this.style.display='block'"
                                onerror="this.style.display='none'; this.parentElement.innerHTML='<div class=\'flex items-center justify-center h-full bg-gray-50\'><p class=\'text-gray-400 text-sm\'>Imagen no disponible</p></div>'"
                            />
                        </div>
                        
                        <!-- Product Details -->
                        <div class="p-6 space-y-4">
                            <!-- Brand -->
                            <div class="space-y-1">
                                <label class="text-xs font-medium text-gray-500 uppercase">Marca</label>
                                <input type="text" name="marca" class="w-full text-gray-900 font-medium bg-transparent border-0 editable" value="{{ producto.marca }}" readonly>
                            </div>

                            {% if producto.nombre is defined and producto.nombre %}
                                <div class="space-y-1">
                                    <label class="text-xs font-medium text-gray-500 uppercase">Nombre</label>
                                    <input type="text" name="nombre" class="w-full text-gray-900 bg-transparent border-0 editable" value="{{ producto.nombre }}" readonly>
                                </div>
                            {% endif %}

                            {% if producto.modelo is defined and producto.modelo %}
                                <div class="space-y-1">
                                    <label class="text-xs font-medium text-gray-500 uppercase">Modelo</label>
                                    <input type="text" name="modelo" class="w-full text-gray-900 bg-transparent border-0 editable" value="{{ producto.modelo }}" readonly>
                                </div>
                                <div class="space-y-1">
                                    <label class="text-xs font-medium text-gray-500 uppercase">Tamaño</label>
                                    <input type="text" name="tamano" class="w-full text-gray-900 bg-transparent border-0 editable" value="{{ producto.tamano }}" readonly>
                                </div>
                                <div class="space-y-1">
                                    <label class="text-xs font-medium text-gray-500 uppercase">Tipo</label>
                                    <input type="text" name="tipo" class="w-full text-gray-900 bg-transparent border-0 editable" value="{{ producto.tipo }}" readonly>
                                </div>
                            {% endif %}

                            <div class="space-y-1">
                                <label class="text-xs font-medium text-gray-500 uppercase">ID</label>
                                <input type="text" name="id" class="w-full text-gray-900 bg-transparent border-0" value="{{ producto.id }}" readonly>
                            </div>

                            <div class="space-y-1">
                                <label class="text-xs font-medium text-gray-500 uppercase">UPC</label>
                                <input type="text" name="upc" class="w-full text-gray-900 bg-transparent border-0 editable" value="{{ producto.upc }}" readonly>
                            </div>

                            <div class="space-y-1">
                                <label class="text-xs font-medium text-gray-500 uppercase">Stock</label>
                                <input type="number" name="stock" class="w-full text-gray-900 bg-transparent border-0 editable" value="{{ producto.stock }}" readonly>
                            </div>

                            <!-- Price -->
                            <div class="pt-4 mt-4 border-t border-gray-100">
                                <input type="number" name="precio" class="w-full text-2xl font-bold text-black bg-transparent border-0 editable" value="{{ producto.precio }}" readonly>
                            </div>

                            <!-- Edit and Delete Buttons -->
                            <div class="flex justify-end items-center space-x-4 mt-4">
                                <button type="button" class="text-2xl hover:scale-110 transition-transform duration-300" onclick="toggleProductEdit('{{ producto.id }}')">
                                    <span class="edit-icon">✏️</span>
                                    <span class="save-icon hidden">✔️</span>
                                </button>
                                <button type="submit" class="edit-button px-6 py-2 duration-300 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-lg transition-colors hidden">
                                    Guardar
                                </button>
                            </div>
                        </div>
                    </form>
                    <form action="{{ path('archiveProduct') }}" method="POST" class="px-6 pb-4">
                        <input type="hidden" name="id" value="{{ producto.id }}">
                        <button type="button" onclick="confirmDelete('{{ producto.id }}')" class="text-2xl hover:scale-110 transition-transform duration-300 text-red-500">
                            🗑️
                        </button>
                    </form>
                </div>
            {% endfor %}
        </div>

        <!-- Load More Button -->
        <div class="text-center mt-8">
            <button id="verMas" class="hidden px-6 py-3 bg-black text-white rounded-xl hover:bg-gray-800 transition-colors duration-300">
                Cargar más productos
            </button>
        </div>
    </div>

<script>
    // DOM Content Loaded - Manejo de formularios y UI
    document.addEventListener('DOMContentLoaded', function() {
        // Variables para los forms y botones
        const addTireBtn = document.getElementById('add-tire-btn');
        const addProductBtn = document.getElementById('add-product-btn');
        const newTireForm = document.getElementById('new-tire-form');
        const newProductForm = document.getElementById('new-product-form');
        const tireDropdownIcon = document.getElementById('tire-dropdown-icon');
        const productDropdownIcon = document.getElementById('product-dropdown-icon');
        const inputBuscar = document.getElementById('buscar');
        const productosContainer = document.getElementById('productosContainer');
        const productos = Array.from(document.querySelectorAll('.product'));
        const verMasBtn = document.getElementById('verMas');
        const noResults = document.getElementById('noResults');
        
        // Variables para la paginación
        let productosMostrados = 50;
        let productosFiltrados = productos;

        // Toggle Tire form visibility
        addTireBtn.addEventListener('click', () => {
            newTireForm.classList.toggle('hidden');
            tireDropdownIcon.classList.toggle('rotate-180');
            // cerrar otro form si esta abierto
            if (!newProductForm.classList.contains('hidden')) {
                newProductForm.classList.add('hidden');
                productDropdownIcon.classList.remove('rotate-180');
            }
        });

        // Toggle Product form visibility
        addProductBtn.addEventListener('click', () => {
            newProductForm.classList.toggle('hidden');
            productDropdownIcon.classList.toggle('rotate-180');
            // cerrar otro form si esta abierto
            if (!newTireForm.classList.contains('hidden')) {
                newTireForm.classList.add('hidden');
                tireDropdownIcon.classList.remove('rotate-180');
            }
        });

        // Convertir a mayúsculas para el formulario de neumáticos
        newTireForm.addEventListener('submit', function(e) {
            const tamanoInput = document.getElementById('tire-tamano');
            const tipoInput = document.getElementById('tire-tipo');
            
            tamanoInput.value = tamanoInput.value.toUpperCase();
            tipoInput.value = tipoInput.value.toUpperCase();
            localStorage.setItem('showAlert', 'tire');
        });

        // Convertir a mayúsculas mientras se escribe
        document.getElementById('tire-tamano').addEventListener('input', function(e) {
            this.value = this.value.toUpperCase();
        });

        document.getElementById('tire-tipo').addEventListener('input', function(e) {
            this.value = this.value.toUpperCase();
        });

        // Event listener para el formulario de productos
        newProductForm.addEventListener('submit', function(e) {
            localStorage.setItem('showAlert', 'product');
        });

        // Form validation
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', function(e) {
                const requiredInputs = this.querySelectorAll('input[required]');
                let isValid = true;

                requiredInputs.forEach(input => {
                    if (!input.value.trim()) {
                        isValid = false;
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    alert('Por favor, complete todos los campos requeridos.');
                }
            });
        });

        // Función para mostrar alertas
        function showSuccessAlert(message) {
            const alert = document.getElementById('successAlert');
            const alertMessage = document.getElementById('alertMessage');
            alertMessage.textContent = message;
            
            alert.classList.remove('hidden');
            alert.classList.add('opacity-100');
            
            setTimeout(() => {
                alert.classList.add('opacity-0');
                setTimeout(() => {
                    alert.classList.add('hidden');
                }, 500);
            }, 3000);
        }

        // Verificar alertas pendientes al cargar
        const pendingAlert = localStorage.getItem('showAlert');
        if (pendingAlert) {
            if (pendingAlert === 'tire') {
                showSuccessAlert('Neumático agregado exitosamente');
            } else if (pendingAlert === 'product') {
                showSuccessAlert('Producto agregado exitosamente');
            }
            localStorage.removeItem('showAlert');
        }

        // Funciones de búsqueda y filtrado
        function productoCoincideConBusqueda(producto, textoBusqueda) {
            const marca = producto.querySelector('[name="marca"]')?.value || '';
            const nombre = producto.querySelector('[name="nombre"]')?.value || '';
            const modelo = producto.querySelector('[name="modelo"]')?.value || '';
            const tipo = producto.querySelector('[name="tipo"]')?.value || '';
            const id = producto.querySelector('[name="id"]')?.value || '';
            const upc = producto.querySelector('[name="upc"]')?.value || '';

            const textoProducto = [marca, nombre, modelo, tipo, id, upc]
                .map(text => text.toLowerCase())
                .join(' ');

            const palabrasBusqueda = textoBusqueda.toLowerCase().split(' ');

            return palabrasBusqueda.every(palabra => textoProducto.includes(palabra));
        }

        function filtrarProductos() {
            const textoBusqueda = inputBuscar.value.toLowerCase().trim();
            
            if (textoBusqueda === '') {
                productosFiltrados = productos;
            } else {
                productosFiltrados = productos.filter(producto => 
                    productoCoincideConBusqueda(producto, textoBusqueda)
                );
            }

            return productosFiltrados;
        }

        function mostrarProductos() {
            const productosFiltrados = filtrarProductos();
            
            productos.forEach(producto => producto.classList.add('hidden'));
            
            productosFiltrados.slice(0, productosMostrados).forEach(producto => {
                producto.classList.remove('hidden');
            });

            const hayResultados = productosFiltrados.length > 0;
            noResults.classList.toggle('hidden', hayResultados);
            verMasBtn.classList.toggle('hidden', productosFiltrados.length <= productosMostrados);
        }

        // Función para editar productos
        window.toggleProductEdit = function(productId) {
            const form = document.getElementById(`product-form-${productId}`);
            const formContainer = form.closest('.product');
            const inputs = form.querySelectorAll('.editable');
            const editButton = form.querySelector('.edit-button');
            const editIcon = form.querySelector('.edit-icon');
            const saveIcon = form.querySelector('.save-icon');
            
            formContainer.classList.toggle('editing-mode');
            editIcon.classList.toggle('hidden');
            saveIcon.classList.toggle('hidden');
            
            inputs.forEach(input => {
                input.readOnly = !input.readOnly;
                if (!input.readOnly) {
                    input.focus();
                }
            });
            
            editButton.classList.toggle('hidden');
        }

        // Función para eliminar productos
        window.confirmDelete = function(productId) {
            if (window.confirm('¿Está seguro que desea eliminar este producto?')) {
                const form = document.querySelector(`form[action="{{ path('archiveProduct') }}"] input[value="${productId}"]`).closest('form');
                form.submit();
            }
        }

        // Event Listeners para búsqueda y paginación
        inputBuscar.addEventListener('input', function() {
            productosMostrados = 50;
            mostrarProductos();
        });

        verMasBtn.addEventListener('click', function() {
            productosMostrados += 50;
            mostrarProductos();
        });

        // Mostrar productos iniciales
        mostrarProductos();

        // Verificar mensaje de éxito en la respuesta
        {% if response is defined and response.success is defined %}
            showSuccessAlert("");
        {% endif %}
    });
</script>

    {% include 'partials/footer.html.twig' %}
</body>
</html>